<!doctype html>
<html lang="en">
<header class="navbar navbar-fixed-top navbar-inverse">
  <div class="container">
    <% user = User.find_by(id:session[:user_id])%>
    <nav>
      <ul class="nav navbar-nav navbar-left">
        <li><img class="mb-4" src="logo.png" alt="logo" width="72" height="72"></li> 
        <li><%= link_to "Todaysplan",'#' %></li>
        <li><%= link_to "Discover your BMR",   "/analyzeweightchange" %></li>
        <li><%= link_to "Nearby Gyms",'/nearbygyms' %></li>
        <li><%= link_to "Stopwatch", "/stopwatch" %></li>
        <li><%= link_to "Home", "/home" %></li>
        <li><%= link_to "Log Out","/logout" %></li>
      </ul>
    </nav>
  </div>
</header>

<br><br><br><br>
  <head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>

  <h1>Enter your City</h1>
  <input type="text" name="location" id="City"><br>
  <input id="submit" type="button" value="Submit">

<!-- <script>
  var input = document.getElementById("City").value;
</script>
 --><br><br><br>


  <body>
    <div id="map"></div>
    <script>
      var map;
      var service;
      var infowindow;

      function initMap() {
        var burnaby = new google.maps.LatLng(49.2488,-122.9805);

        infowindow = new google.maps.InfoWindow();

        map = new google.maps.Map(document.getElementById('map'), {
            center: burnaby,
            zoom: 10
          });

        var geocoder = new google.maps.Geocoder();

        var request = {
          location: burnaby,
          radius: '500',
          query: 'gyms',
          fields: ['name', 'geometry']
        };

        document.getElementById('submit').addEventListener('click', function() {
          geocodeAddress(geocoder, map);
        })

        service = new google.maps.places.PlacesService(map);
        service.findPlaceFromQuery(request, function(results, status) {
          if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (var i = 0; i < results.length; i++) {
              createMarker(results[i]);
            }
          }
      });
    }

      function createMarker(place) {
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
      }

      function geocodeAddress(geocoder, resultsMap) {
        var City = document.getElementById('City').value;
        geocoder.geocode({'City': City}, function(results, status) {
          if (status === 'OK') {
            resultsMap.setCenter(results[0].geometry.location);
            resultsMap.setZoom(13);
          } else {
            alert('Geocode was not successful for the following reason: ' + status);
          }
        });
      }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyACHUQBMSFjirohUFI2pJhngKf5wsFoC9o&libraries=places&callback=initMap" async defer></script>
  </body>
  </html>
